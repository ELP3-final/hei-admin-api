/*
 * HEI Admin API
 * _Programmatically connect to a computer programming [school](https://hei.school)._ After [joining us](mailto:contact@hei.school), you can get an identification token from our [dev](https://dev-hei-admin.auth.eu-west-3.amazoncognito.com/oauth2/authorize?client_id=5s8cg50doahmu855rlc8fr6qmp&response_type=token&scope=email+openid&redirect_uri=https%3A%2F%2Fapi-dev.hei.school%2Fwhoami) or [prod](https://prod-hei-admin.auth.eu-west-3.amazoncognito.com/oauth2/authorize?client_id=i8bg538jpfu6mqmqb61m26trd&response_type=token&scope=email+openid&redirect_uri=https%3A%2F%2Fapi-prod.hei.school%2Fwhoami) authentication service. Then, start playing with our system!  The implementation of our API is [publicly disclosed](https://github.com/hei-school/hei-admin-api). You are welcome to try and compromise it. Happy hacking! 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package school.hei.haapi.endpoint.rest.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * EventParticipant
 */
@JsonPropertyOrder({
  EventParticipant.JSON_PROPERTY_ID,
  EventParticipant.JSON_PROPERTY_EVENT_ID,
  EventParticipant.JSON_PROPERTY_USER_ID,
  EventParticipant.JSON_PROPERTY_EVENT_ROLE,
  EventParticipant.JSON_PROPERTY_ATTENDANCE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-10T14:13:25.782434+03:00[Africa/Nairobi]")
public class EventParticipant {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_EVENT_ID = "event_id";
  private String eventId;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private String userId;

  /**
   * Gets or Sets eventRole
   */
  public enum EventRoleEnum {
    SUPERVISOR("SUPERVISOR"),
    
    ATTENDANT("ATTENDANT");

    private String value;

    EventRoleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EventRoleEnum fromValue(String value) {
      for (EventRoleEnum b : EventRoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EVENT_ROLE = "event_role";
  private EventRoleEnum eventRole;

  /**
   * Gets or Sets attendance
   */
  public enum AttendanceEnum {
    EXPECTED("EXPECTED"),
    
    HERE("HERE"),
    
    MISSING("MISSING");

    private String value;

    AttendanceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AttendanceEnum fromValue(String value) {
      for (AttendanceEnum b : AttendanceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ATTENDANCE = "attendance";
  private AttendanceEnum attendance;


  public EventParticipant id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public EventParticipant eventId(String eventId) {
    this.eventId = eventId;
    return this;
  }

   /**
   * Get eventId
   * @return eventId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEventId() {
    return eventId;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventId(String eventId) {
    this.eventId = eventId;
  }


  public EventParticipant userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(String userId) {
    this.userId = userId;
  }


  public EventParticipant eventRole(EventRoleEnum eventRole) {
    this.eventRole = eventRole;
    return this;
  }

   /**
   * Get eventRole
   * @return eventRole
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EVENT_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EventRoleEnum getEventRole() {
    return eventRole;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventRole(EventRoleEnum eventRole) {
    this.eventRole = eventRole;
  }


  public EventParticipant attendance(AttendanceEnum attendance) {
    this.attendance = attendance;
    return this;
  }

   /**
   * Get attendance
   * @return attendance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ATTENDANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AttendanceEnum getAttendance() {
    return attendance;
  }


  @JsonProperty(JSON_PROPERTY_ATTENDANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttendance(AttendanceEnum attendance) {
    this.attendance = attendance;
  }


  /**
   * Return true if this EventParticipant object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventParticipant eventParticipant = (EventParticipant) o;
    return Objects.equals(this.id, eventParticipant.id) &&
        Objects.equals(this.eventId, eventParticipant.eventId) &&
        Objects.equals(this.userId, eventParticipant.userId) &&
        Objects.equals(this.eventRole, eventParticipant.eventRole) &&
        Objects.equals(this.attendance, eventParticipant.attendance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, eventId, userId, eventRole, attendance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventParticipant {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    eventRole: ").append(toIndentedString(eventRole)).append("\n");
    sb.append("    attendance: ").append(toIndentedString(attendance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

